#!/bin/sh

loadConfig() {
  if [ -f "$config" ]; then
    source "$config"
  else
    mkdir -p "$(dirname "$config")"
    touch "$config"
  fi
}

help() {
  printf "ISP Manager 1.0, a CLI tool for captive portals\n"
  printf "Usage: ispmgr [OPTION]...\n\n"
  printf "init        start the setup wizard\n"
  printf "info        show account information\n"
  printf "login       start a session\n"
  printf "logout      end the session\n"
  printf "chpasswd    change the session password\n"
  printf "delcred     delete the locally stored credentials"
  printf "\n--help      display this help section\n"

  exit 0
}

init() {
  read -rp "Captive Portal URL: " url
  read -rp "Username: " username
  read -srp "Password: " password && echo
  echo "cookie=1" >> "$config"
  echo "url=$url" >> "$config"
  echo "username=$username" >> "$config"
  echo "password=$password" >> "$config"
  loadConfig
}

checkRun() {
  if [ "$cookie" = "" ]; then
    printf "ispmgr: run 'ispmgr init' first\n"
    printf "Try 'ispmgr --help' for more options.\n"
    exit 1
  fi
}

clearData() {
  read -rp "Delete Credentials? (y/N): " forget
  case $forget in
    ""|[Nn])
      printf ""
    ;;

    [Yy])
      sed -i '/^cookie=/d' "$config"
      sed -i '/^url=/d' "$config"
      sed -i '/^username=/d' "$config"
      sed -i '/^password=/d' "$config"
      loadConfig
      printf "Credentials Deleted\n"
    ;;

    *)
      printf "Please enter a valid choice."
      exit 0
    ;;
  esac
}

sendRequest() {
  local data="$1"
  curl -ks -o /dev/null "$url" \
    -X POST -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0" \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -H "Referer: $url" \
    --data-raw "$data"
}

checkData() {
  local data1="$1"
  local data2="$2"
  local choice="$3"
  if [ "$(curl -ks "$url" | grep -q "$query"; echo $?)" = "$choice" ]; then
    printf "$data1"
    exit 0
  else
    printf "$data2"
  fi
}

getInfo(){
  local name="$1"
  local query="$2"
  printf "%s" "$name"
  curl -ks "$url" | grep -oP '(?<='"$query"'</span></p></td><td align="left">)[^<]+'
}

getIP(){
  ip="$(curl -s https://ip$1.icanhazip.com)"
  if [ $? != "0" ]; then
    ip="N/A"
  fi
  printf "IP$1 Addr: $ip\n"
}

config="$HOME/.config/ispmgr.conf"
query="Internet Access Log-in"
loadConfig

case $1 in
  '')
    printf "ispmgr: please supply an argument\n"
    checkRun
    printf "Try 'ispmgr --help' for more options.\n"
    exit 1
  ;;

  'init')
    init
  ;;

  'info')
    checkRun
    checkData "You must Login first\n" "" "0"
    echo "### Account Information ###"
    getInfo "Name:      " "Name:"
    getInfo "Email:     " "E-mail:"
    getInfo "Package:   " "Package:"
    getInfo "Validity:  " "Expiry date:"
    printf "Username:  %s\n" "$username"
    getInfo "Client ID: " "CLIENT ID:"
    getIP "v4"
    getIP "v6"
  ;;

  'login')
    checkRun
    checkData "Already Logged in.\n" "" "1"
    sendRequest "user="$username"&pass="$password"&login=Login"
    checkData "Login Successful.\n" "\nLogin Un-Successful.\nPlease check your username and Password.\n" "1"
    sed -i '/^cookie=/d' "$config"
    sed -i '/^url=/d' "$config"
    sed -i '/^username=/d' "$config"
    sed -i '/^password=/d' "$config"
    loadConfig
  ;;

  'logout')
    checkRun
    checkData "Already Logged out.\n" "" "0"
    sendRequest "logout=Click+here+to+logout"
    checkData "" "Logout Successful.\n" "1"
    clearData
  ;;

  'chpasswd')
    checkRun
    checkData "You must Login first\n" "" "0"
    printf "User: %s\n" "$username"
    read -srp "New Password: " newPassword1 && echo
    read -srp "Re-enter Password: " newPassword2 && echo
    if [ "$newPassword1" != "$newPassword2" ]; then
      printf "\nNew passwords don't match.\n"
      exit 1
    fi
    url="$url"chpw
    sendRequest "user="$username"&opass="$password"&pass1="$newPassword1"&pass2="$newPassword2"&chpass="Change+password
    sed -i '/^password=/d' "$config"
    echo "password=$newPassword1" >> "$config"
    loadConfig
    printf "Password changed successfully\n"
  ;;

  'delcred')
    checkRun
    clearData
  ;;

  '--help')
    help
  ;;
  
  *)
    printf "ispmgr: unrecognized option '"$1"'\n"
    checkRun
    printf "Try 'ispmgr --help' for more options.\n"
    exit 1
  ;;
esac
