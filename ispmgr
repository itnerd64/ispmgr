#!/bin/sh

loadConfig() {
  if [ -f "$config" ]; then
    source "$config"
  else
    mkdir -p "$(dirname "$config")"
    touch "$config"
  fi
}

help() {
  printf "ISP Manager 1.0, a CLI tool for captive portals\n"
  printf "Usage: ispmgr [OPTION]...\n\n"
  printf "init        start the setup wizard"
  printf "\n--help      display this help section\n"

  exit 0
}

init() {
  read -rp "Captive Portal URL: " url
  echo "firstRun=1" >> "$config"
  echo "url=$url" >> "$config"
  loadConfig
}

checkRun() {
  if [ "$firstRun" = "" ]; then
    printf "ispmgr: run 'ispmgr init' first\n"
    printf "Try 'ispmgr --help' for more options.\n"
    exit 1
  fi
}

inputData() {
  if [ "$cookie" = "" ]; then
    read -rp "Username: " username
    read -srp "Password: " password && echo
    read -rp "Save Credentials? (Y/n): " remember
    case $remember in
      ""|[Yy])
        echo "cookie=1" >> "$config"
        echo "username=$username" >> "$config"
        echo "password=$password" >> "$config"
        loadConfig
      ;;

      [Nn])
        printf ""
      ;;

      *)
        printf "Please enter a valid choice."
        exit 0
      ;;
    esac
  fi
}

clearData() {
  read -rp "Delete Credentials? (y/N): " forget
  case $forget in
    ""|[Nn])
      printf ""
    ;;

    [Yy])
      sed -i '/^cookie=/d' "$config"
      sed -i '/^username=/d' "$config"
      sed -i '/^password=/d' "$config"
      loadConfig
      printf "Credentials Deleted\n"
    ;;

    *)
      printf "Please enter a valid choice."
      exit 0
    ;;
  esac
}

sendRequest() {
  local data="$1"
  curl -ks -o /dev/null "$url" \
    -X POST -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0" \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -H "Referer: $url" \
    --data-raw "$data"
}

checkData() {
  local data1="$1"
  local data2="$2"
  local choice="$3"
  if [ "$(curl -ks "$url" | grep -q "$query"; echo $?)" = "$choice" ]; then
    printf "$data1"
    exit 0
  else
    printf "$data2"
  fi
}

config="$HOME/.config/ispmgr.conf"
loadConfig

case $1 in
  '')
    printf "ispmgr: please supply an argument\n"
    checkRun
    printf "Try 'ispmgr --help' for more options.\n"
    exit 1
  ;;
  'init')
    init
  ;;

  '--help')
    help
  ;;
  
  *)
    printf "ispmgr: unrecognized option '"$1"'\n"
    checkRun
    printf "Try 'ispmgr --help' for more options.\n"
    exit 1
  ;;
esac
